type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  phoneNumber: String
  city: String
  password: String!
  userType: UserType!
  agreement: String!
  agreementVersion: Float!
  phoneNumberActivationCode: String!
  phoneNumberActivation: Boolean!
  emailActivationCode: String!
  emailActivation: Boolean!
  twoFactorCode: String!
  twoFactorActivation: Boolean!
  fingerPrint: String
  theme: Theme!
  budget: Int!
  statistics: [Statistic!]! @relation(name: "StatisticToUSer", onDelete: CASCADE)
  topics: [Topic!]! @relation(name: "UserToTopic", onDelete: SET_NULL)
  posts: [Post!]! @relation(name: "UserToPost", onDelete: CASCADE)
  transactions: [Transaction!]! @relation(name: "TransactionToUser", onDelete: SET_NULL)
  likes: [Like!]! @relation(name: "LikeToUser", onDelete: CASCADE)
  favorites: [Favorite!]! @relation(name: "FavoriteToUser", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Transaction {
  id: ID! @id
  amount: Int!
  budgetType: BudgetType!
  description: String
  user: User! @relation(name: "TransactionToUser", onDelete: SET_NULL)
  topic: Topic @relation(name: "TransactionToTopic", onDelete: SET_NULL)
  post: Post @relation(name: "TransactionToPost", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Category {
  id: ID! @id
  title: String!
  description: String
  topics: [Topic!]! @relation(name: "TopicToCategory", onDelete: CASCADE)
  slug: String! @unique
  order: Int!
}

type Topic {
  id: ID! @id
  title: String!
  slug: String! @unique
  category: Category! @relation(name: "TopicToCategory", onDelete: SET_NULL)
  user: User @relation(name: "UserToTopic", onDelete: SET_NULL)
  posts: [Post!]! @relation(name: "TopicToPost", onDelete: CASCADE)
  transactions: [Transaction!]! @relation(name: "TransactionToTopic", onDelete: SET_NULL)
  paidTimes: Int!
  status: Boolean!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  description: String!
  topic: Topic! @relation(name: "TopicToPost", onDelete: SET_NULL)
  user: User! @relation(name: "UserToPost", onDelete: SET_NULL)
  favorites: [Favorite!]! @relation(name: "FavoriteToPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeToPost", onDelete: CASCADE)
  favoritesPaidTimes: Int!
  likesPaidTimes: Int!
  dislikesPaidTimes: Int!
  transactions: [Transaction!]! @relation(name: "TransactionToPost", onDelete: SET_NULL)
  status: PostStatusType!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Favorite {
  id: ID! @id
  post: Post! @relation(name: "FavoriteToPost", onDelete: SET_NULL)
  user: User! @relation(name: "FavoriteToUser", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  likeType: LikeType
  post: Post! @relation(name: "LikeToPost", onDelete: SET_NULL)
  user: User! @relation(name: "LikeToUser", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Currency {
  id: ID! @id
  usDollar: Float!
  turkishLira: Float!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Statistic {
  id: ID! @id
  topic: Topic!
  user: User @relation(name: "StatisticToUSer", onDelete: SET_NULL)
  ip: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Faucet {
  id: ID! @id
  title: String!
  url: String!
  paymentStatus: PaymentStatusType!
  clickCounter: Int!
  order: Int!
}

enum LikeType {
  LIKE
  DISLIKE
}

enum BudgetType {
  FAVORITE
  LIKE
  TOPIC
  POST
  WELCOME
  REPORT
  CUSTOM
  DELETEDPOST
  DISLIKE
  PAYMENT
}

enum Theme {
  LIGHT
  DARK
}
enum PostStatusType {
  BANNED
  DRAFT
  PASSIVE
  ACTIVE
}
enum UserType {
  ADMIN
  MODERATOR
  SUBSCRIBER
  INSPECTION
  PAYABLEUSER
  USER
  PASSIVE
  BANNED
}

enum PaymentStatusType {
  PAYING
  NOTSURE
  SCAM
}
